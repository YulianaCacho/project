{"ast":null,"code":"var _jsxFileName = \"/workspaces/project/src/layout/carrusel.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\nimport { useNavigate } from \"react-router-dom\";\nimport '/workspaces/project/src/css/Carrusel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Carrusel = ({\n  playas\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const handleClick = slug => {\n    navigate(\"/detalle/\" + slug);\n  };\n\n  // Verificar si playas tiene datos antes de dividirlo en chunks\n  if (!playas || playas.length === 0) {\n    return null; // O manejar el caso cuando no hay datos de playas\n  }\n\n  // Funci칩n para dividir el array de playas en chunks de tama침o especificado (3 en este caso)\n  const chunkArray = (array, size) => {\n    const chunkedArr = [];\n    for (let i = 0; i < array.length; i += size) {\n      chunkedArr.push(array.slice(i, i + size));\n    }\n    return chunkedArr;\n  };\n\n  // Dividir el array de playas en chunks de 3 elementos por cada item del carrusel\n  const chunkedPlayas = chunkArray(playas, 3);\n  return /*#__PURE__*/_jsxDEV(Carousel, {\n    children: chunkedPlayas.map((chunk, index) => /*#__PURE__*/_jsxDEV(Carousel.Item, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-around\",\n        children: chunk.map(playa => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleClick(playa.slug),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: playa.picture,\n            alt: playa.name,\n            className: \"w-100 dark-image mb-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: playa.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: playa.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary btn-sm\",\n            children: \"Ver detalle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 19\n          }, this)]\n        }, playa.slug, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n};\n_s(Carrusel, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Carrusel;\nexport default Carrusel;\nvar _c;\n$RefreshReg$(_c, \"Carrusel\");","map":{"version":3,"names":["React","Carousel","useNavigate","jsxDEV","_jsxDEV","Carrusel","playas","_s","navigate","handleClick","slug","length","chunkArray","array","size","chunkedArr","i","push","slice","chunkedPlayas","children","map","chunk","index","Item","className","playa","onClick","src","picture","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","description","_c","$RefreshReg$"],"sources":["/workspaces/project/src/layout/carrusel.js"],"sourcesContent":["import React from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\nimport { useNavigate } from \"react-router-dom\";\nimport '/workspaces/project/src/css/Carrusel.css';\n\nconst Carrusel = ({ playas }) => {\n    const navigate = useNavigate();\n  \n    const handleClick = (slug) => {\n      navigate(\"/detalle/\" + slug);\n    }\n  \n    // Verificar si playas tiene datos antes de dividirlo en chunks\n    if (!playas || playas.length === 0) {\n      return null; // O manejar el caso cuando no hay datos de playas\n    }\n  \n    // Funci칩n para dividir el array de playas en chunks de tama침o especificado (3 en este caso)\n    const chunkArray = (array, size) => {\n      const chunkedArr = [];\n      for (let i = 0; i < array.length; i += size) {\n        chunkedArr.push(array.slice(i, i + size));\n      }\n      return chunkedArr;\n    }\n  \n    // Dividir el array de playas en chunks de 3 elementos por cada item del carrusel\n    const chunkedPlayas = chunkArray(playas, 3);\n  \n    return (\n      <Carousel>\n        {chunkedPlayas.map((chunk, index) => (\n          <Carousel.Item key={index}>\n            <div className=\"d-flex justify-content-around\">\n              {chunk.map((playa) => (\n                <div key={playa.slug} onClick={() => handleClick(playa.slug)}>\n                  <img src={playa.picture} alt={playa.name} className=\"w-100 dark-image mb-3\" />\n                  <h2>{playa.name}</h2>\n                  <p>{playa.description}</p>\n                  <button className=\"btn btn-primary btn-sm\">Ver detalle</button>\n                </div>\n              ))}\n            </div>\n          </Carousel.Item>\n        ))}\n      </Carousel>\n    );\n  }\nexport default Carrusel;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,0CAA0C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9B,MAAMO,WAAW,GAAIC,IAAI,IAAK;IAC5BF,QAAQ,CAAC,WAAW,GAAGE,IAAI,CAAC;EAC9B,CAAC;;EAED;EACA,IAAI,CAACJ,MAAM,IAAIA,MAAM,CAACK,MAAM,KAAK,CAAC,EAAE;IAClC,OAAO,IAAI,CAAC,CAAC;EACf;;EAEA;EACA,MAAMC,UAAU,GAAGA,CAACC,KAAK,EAAEC,IAAI,KAAK;IAClC,MAAMC,UAAU,GAAG,EAAE;IACrB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAACF,MAAM,EAAEK,CAAC,IAAIF,IAAI,EAAE;MAC3CC,UAAU,CAACE,IAAI,CAACJ,KAAK,CAACK,KAAK,CAACF,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAAC,CAAC;IAC3C;IACA,OAAOC,UAAU;EACnB,CAAC;;EAED;EACA,MAAMI,aAAa,GAAGP,UAAU,CAACN,MAAM,EAAE,CAAC,CAAC;EAE3C,oBACEF,OAAA,CAACH,QAAQ;IAAAmB,QAAA,EACND,aAAa,CAACE,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC9BnB,OAAA,CAACH,QAAQ,CAACuB,IAAI;MAAAJ,QAAA,eACZhB,OAAA;QAAKqB,SAAS,EAAC,+BAA+B;QAAAL,QAAA,EAC3CE,KAAK,CAACD,GAAG,CAAEK,KAAK,iBACftB,OAAA;UAAsBuB,OAAO,EAAEA,CAAA,KAAMlB,WAAW,CAACiB,KAAK,CAAChB,IAAI,CAAE;UAAAU,QAAA,gBAC3DhB,OAAA;YAAKwB,GAAG,EAAEF,KAAK,CAACG,OAAQ;YAACC,GAAG,EAAEJ,KAAK,CAACK,IAAK;YAACN,SAAS,EAAC;UAAuB;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC9E/B,OAAA;YAAAgB,QAAA,EAAKM,KAAK,CAACK;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrB/B,OAAA;YAAAgB,QAAA,EAAIM,KAAK,CAACU;UAAW;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1B/B,OAAA;YAAQqB,SAAS,EAAC,wBAAwB;YAAAL,QAAA,EAAC;UAAW;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAJvDT,KAAK,CAAChB,IAAI;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKf,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC,GAVYZ,KAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWV,CAChB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEf,CAAC;AAAA5B,EAAA,CA1CGF,QAAQ;EAAA,QACOH,WAAW;AAAA;AAAAmC,EAAA,GAD1BhC,QAAQ;AA2Cd,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}